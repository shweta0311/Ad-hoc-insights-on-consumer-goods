/* 1.  Provide the list of markets in which customer  "Atliq  Exclusive"  operates its 
business in the  APAC  region. */

SELECT DISTINCT market
FROM dim_customer
WHERE customer = 'Atliq Exclusive'
AND region = 'APAC';

/* 2.  What is the percentage of unique product increase in 2021 vs. 2020? The 
final output contains these fields, 
unique_products_2020 
unique_products_2021 
percentage_chg */


WITH unique_products_2020 AS (
    SELECT 
        COUNT(DISTINCT product_code) AS unique_products_2020
    FROM fact_sales_monthly	
    WHERE fiscal_year = 2020
),
unique_products_2021 AS (
    SELECT 
        COUNT(DISTINCT product_code) AS unique_products_2021
    FROM fact_sales_monthly
    WHERE fiscal_year = 2021
)
SELECT 
    u2020.unique_products_2020,
    u2021.unique_products_2021,
    round(((u2021.unique_products_2021 - u2020.unique_products_2020) / u2020.unique_products_2020) * 100,2) 
    AS percentage_chg
FROM unique_products_2020 u2020
CROSS JOIN unique_products_2021 u2021;


/* 3.  Provide a report with all the unique product counts for each  segment  and 
sort them in descending order of product counts. The final output contains 
2 fields, 
segment 
product_count */

SELECT 
    segment, 
    COUNT(DISTINCT product_code) AS product_count
FROM gdb023.dim_product
GROUP BY segment
ORDER BY product_count DESC;



/* 4.  Follow-up: Which segment had the most increase in unique products in 
2021 vs 2020? The final output contains these fields, 
segment 
product_count_2020 
product_count_2021 
difference */

WITH unique_product_2020 AS (
    SELECT p.segment,
           COUNT(DISTINCT p.product_code) AS unique_product_2020
    FROM dim_product p
    JOIN fact_sales_monthly s
    ON p.product_code = s.product_code
    WHERE s.fiscal_year = 2020
    GROUP BY p.segment
),
unique_product_2021 AS (
    SELECT p.segment,
           COUNT(DISTINCT p.product_code) AS unique_product_2021
    FROM dim_product p
    JOIN fact_sales_monthly s
    ON p.product_code = s.product_code
    WHERE s.fiscal_year = 2021
    GROUP BY p.segment
)
SELECT 
    segment,
    u20.unique_product_2020, 
    u21.unique_product_2021, 
    (u21.unique_product_2021 - u20.unique_product_2020) AS difference
FROM unique_product_2020 u20
JOIN unique_product_2021 u21 
USING (segment)  
ORDER BY difference DESC;

/* 5.  Get the products that have the highest and lowest manufacturing costs. 
The final output should contain these fields, 
product_code 
product 
manufacturing_cost */

(
    SELECT 
        m.product_code,
        p.product,
        ROUND(m.manufacturing_cost, 2) AS manufacturing_cost
    FROM fact_manufacturing_cost m
    JOIN dim_product p USING(product_code)
    ORDER BY m.manufacturing_cost DESC
    LIMIT 1
)
UNION
(
    SELECT 
        m.product_code,
        p.product,
        ROUND(m.manufacturing_cost, 2) AS manufacturing_cost
    FROM fact_manufacturing_cost m
    JOIN dim_product p USING(product_code)
    ORDER BY m.manufacturing_cost ASC
    LIMIT 1
);


/* 6.  Generate a report which contains the top 5 customers who received an 
average high  pre_invoice_discount_pct  for the  fiscal  year 2021  and in the 
Indian  market. The final output contains these fields, 
customer_code 
customer 
average_discount_percentage */

SELECT 
    c.customer_code,
    c.customer,
    ROUND(AVG(d.pre_invoice_discount_pct)*100, 2) AS avg_discount
FROM fact_pre_invoice_deductions d
JOIN dim_customer c
USING(customer_code)
WHERE fiscal_year = 2021
AND c.market = 'India'
GROUP BY c.customer_code, c.customer
ORDER BY avg_discount desc
LIMIT 5;

/* 7.  Get the complete report of the Gross sales amount for the customer  “Atliq 
Exclusive”  for each month  .  This analysis helps to  get an idea of low and 
high-performing months and take strategic decisions. 
The final report contains these columns: 
Month 
Year 
Gross sales Amount */

SELECT 
    MONTHNAME(s.date) AS month, 
    YEAR(s.date) AS year, 
    ROUND(SUM(g.gross_price * s.sold_quantity) / 1000000, 2) AS gross_sales_amount
FROM fact_sales_monthly s
JOIN fact_gross_price g 
    USING (product_code, fiscal_year)
JOIN dim_customer c 
    USING (customer_code)
WHERE c.customer = 'Atliq Exclusive'
GROUP BY year, month
ORDER BY year;




/* 8.  In which quarter of 2020, got the maximum total_sold_quantity? The final 
output contains these fields sorted by the total_sold_quantity, 
Quarter 
total_sold_quantity */

SELECT 
    CONCAT("Q", QUARTER(DATE_ADD(s.date, INTERVAL 4 MONTH))) AS quarter,
    ROUND(SUM(s.sold_quantity) / 1000000, 2) AS total_sold_quantity
FROM fact_sales_monthly s
WHERE s.fiscal_year = 2020
GROUP BY quarter
ORDER BY total_sold_quantity DESC;



/* 9.  Which channel helped to bring more gross sales in the fiscal year 2021 
and the percentage of contribution?  The final output  contains these fields, 
channel 
gross_sales_mln 
percentage */

WITH total_gross_sales AS (
    SELECT 
        c.channel,
        concat(ROUND(SUM(g.gross_price * s.sold_quantity) / 1000000, 2),"M") AS gross_sales_mil
    FROM fact_gross_price g 
    JOIN fact_sales_monthly s ON g.product_code = s.product_code
    JOIN dim_customer c ON s.customer_code = c.customer_code
    WHERE s.fiscal_year = 2021
    GROUP BY c.channel
)

SELECT 
    *,
    ROUND(gross_sales_mil / SUM(gross_sales_mil) OVER() * 100, 2) AS pct
FROM total_gross_sales
ORDER BY pct DESC;



/* 10.  Get the Top 3 products in each division that have a high 
total_sold_quantity in the fiscal_year 2021? The final output contains these 
fields, 
division 
product_code  */

WITH cte1 AS (
    SELECT 
        p.division,
        p.product_code,
        p.product,
        SUM(s.sold_quantity) AS total_sold_quantity
    FROM fact_sales_monthly s
    JOIN dim_product p USING (product_code)
    WHERE s.fiscal_year = 2021
    GROUP BY p.division, p.product_code, p.product
),
cte2 AS (
    SELECT 
        *,
        DENSE_RANK() OVER (PARTITION BY division ORDER BY total_sold_quantity DESC) AS rank_order
    FROM cte1
)
SELECT * 
FROM cte2 
WHERE rank_order < 4;

